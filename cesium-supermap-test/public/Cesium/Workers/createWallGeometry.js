define(["./when-b60132fc","./Cartesian2-47311507","./PrimitiveType-108f83af","./Cartographic-3309dd0d","./ComponentDatatype-c140a87d","./Check-7b2a090c","./GeometryAttribute-b20c1286","./GeometryAttributes-252e9929","./IndexDatatype-8a5eead4","./Math-119be1a3","./VertexFormat-6446fca0","./WallGeometryLibrary-f13a584f","./Cartesian4-3ca25aab","./RuntimeError-4a5c8994","./WebGLConstants-4ae0db90","./FeatureDetection-c3b71206","./buildModuleUrl-3addfe33","./arrayRemoveDuplicates-d2f048c5","./PolylinePipeline-145ba528","./EllipsoidGeodesic-0f19ac62","./EllipsoidRhumbLine-ed1a6bf4","./IntersectionTests-6eb562ca","./Plane-e2d409ef"],(function(e,t,a,i,n,r,o,s,m,l,u,p,d,c,f,y,C,g,h,v,b,x,A){"use strict";var _=new i.Cartesian3,E=new i.Cartesian3,F=new i.Cartesian3,w=new i.Cartesian3,k=new i.Cartesian3,L=new i.Cartesian3,P=new i.Cartesian3,D=new i.Cartesian3;function G(a){var n=(a=e.defaultValue(a,e.defaultValue.EMPTY_OBJECT)).positions,r=a.maximumHeights,o=a.minimumHeights,s=e.defaultValue(a.vertexFormat,u.VertexFormat.DEFAULT),m=e.defaultValue(a.granularity,l.CesiumMath.RADIANS_PER_DEGREE),p=e.defaultValue(a.ellipsoid,t.Ellipsoid.WGS84);this._positions=n,this._minimumHeights=o,this._maximumHeights=r,this._vertexFormat=u.VertexFormat.clone(s),this._granularity=m,this._ellipsoid=t.Ellipsoid.clone(p),this._enuCenter=a.enuCenter,this._workerName="createWallGeometry";var d=1+n.length*i.Cartesian3.packedLength+2;e.defined(o)&&(d+=o.length),e.defined(r)&&(d+=r.length),this.packedLength=d+t.Ellipsoid.packedLength+u.VertexFormat.packedLength+1,this.packedLength+=i.Cartesian3.packedLength}G.pack=function(a,n,r){var o;r=e.defaultValue(r,0);var s=a._positions,m=s.length;for(n[r++]=m,o=0;o<m;++o,r+=i.Cartesian3.packedLength)i.Cartesian3.pack(s[o],n,r);var l=a._minimumHeights;if(m=e.defined(l)?l.length:0,n[r++]=m,e.defined(l))for(o=0;o<m;++o)n[r++]=l[o];var p=a._maximumHeights;if(m=e.defined(p)?p.length:0,n[r++]=m,e.defined(p))for(o=0;o<m;++o)n[r++]=p[o];return t.Ellipsoid.pack(a._ellipsoid,n,r),r+=t.Ellipsoid.packedLength,u.VertexFormat.pack(a._vertexFormat,n,r),r+=u.VertexFormat.packedLength,n[r++]=a._granularity,e.defined(a._enuCenter)?i.Cartesian3.pack(a._enuCenter,n,r):i.Cartesian3.pack(i.Cartesian3.ZERO,n,r),n};var T=t.Ellipsoid.clone(t.Ellipsoid.UNIT_SPHERE),H=new u.VertexFormat,V={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:T,vertexFormat:H,granularity:void 0,enuCenter:void 0};return G.unpack=function(a,n,r){var o;n=e.defaultValue(n,0);var s,m,l=a[n++],p=new Array(l);for(o=0;o<l;++o,n+=i.Cartesian3.packedLength)p[o]=i.Cartesian3.unpack(a,n);if((l=a[n++])>0)for(s=new Array(l),o=0;o<l;++o)s[o]=a[n++];if((l=a[n++])>0)for(m=new Array(l),o=0;o<l;++o)m[o]=a[n++];var d=t.Ellipsoid.unpack(a,n,T);n+=t.Ellipsoid.packedLength;var c=u.VertexFormat.unpack(a,n,H);n+=u.VertexFormat.packedLength;var f=a[n++],y=i.Cartesian3.unpack(a,n);return i.Cartesian3.equals(y,i.Cartesian3.ZERO)&&(y=void 0),e.defined(r)?(r._positions=p,r._minimumHeights=s,r._maximumHeights=m,r._ellipsoid=t.Ellipsoid.clone(d,r._ellipsoid),r._vertexFormat=u.VertexFormat.clone(c,r._vertexFormat),r._granularity=f,r._enuCenter=y,r):(V.positions=p,V.minimumHeights=s,V.maximumHeights=m,V.granularity=f,V.enuCenter=y,new G(V))},G.fromConstantHeights=function(t){var a,i,n=(t=e.defaultValue(t,e.defaultValue.EMPTY_OBJECT)).positions,r=t.minimumHeight,o=t.maximumHeight,s=e.defined(r),m=e.defined(o);if(s||m){var l=n.length;a=s?new Array(l):void 0,i=m?new Array(l):void 0;for(var u=0;u<l;++u)s&&(a[u]=r),m&&(i[u]=o)}return new G({positions:n,maximumHeights:i,minimumHeights:a,ellipsoid:t.ellipsoid,vertexFormat:t.vertexFormat})},G.createGeometry=function(t){var r=t._positions,u=t._minimumHeights,d=t._maximumHeights,c=t._vertexFormat,f=t._granularity,y=t._ellipsoid,C=t._enuCenter,g=p.WallGeometryLibrary.computePositions(y,r,d,u,f,!0,C);if(e.defined(g.pos)){var h;e.defined(C)&&(h=o.Transforms.eastNorthUpToFixedFrame(C));var v,b=g.pos.bottomPositions,x=g.pos.topPositions,A=g.pos.numCorners,G=x.length,T=2*G,H=c.position?new Float64Array(T):void 0,V=c.normal?new Float32Array(T):void 0,O=c.tangent?new Float32Array(T):void 0,z=c.bitangent?new Float32Array(T):void 0,R=c.st?new Float32Array(T/3*2):void 0,S=0,I=0,M=0,N=0,B=0,U=D,W=P,q=L,Z=!0,J=0,Y=1/((G/=3)-r.length+1);for(v=0;v<G;++v){var j=3*v,K=i.Cartesian3.fromArray(x,j,_),Q=i.Cartesian3.fromArray(b,j,E);if(c.position&&(H[S++]=Q.x,H[S++]=Q.y,H[S++]=Q.z,H[S++]=K.x,H[S++]=K.y,H[S++]=K.z),c.st&&(R[B++]=J,R[B++]=0,R[B++]=J,R[B++]=1),c.normal||c.tangent||c.bitangent){var X,$=i.Cartesian3.clone(i.Cartesian3.ZERO,k),ee=y.scaleToGeodeticSurface(i.Cartesian3.fromArray(x,j,E),E);if(v+1<G&&(X=y.scaleToGeodeticSurface(i.Cartesian3.fromArray(x,j+3,F),F),$=i.Cartesian3.fromArray(x,j+3,k)),Z){var te=i.Cartesian3.subtract($,K,w),ae=i.Cartesian3.subtract(ee,K,_);U=i.Cartesian3.normalize(i.Cartesian3.cross(ae,te,U),U),Z=!1}i.Cartesian3.equalsEpsilon(X,ee,l.CesiumMath.EPSILON10)?Z=!0:(J+=Y,c.tangent&&(W=i.Cartesian3.normalize(i.Cartesian3.subtract(X,ee,W),W)),c.bitangent&&(q=i.Cartesian3.normalize(i.Cartesian3.cross(U,W,q),q))),c.normal&&(e.defined(C)&&(a.Matrix4.multiplyByPoint(h,U,U),i.Cartesian3.normalize(U,U)),V[I++]=U.x,V[I++]=U.y,V[I++]=U.z,V[I++]=U.x,V[I++]=U.y,V[I++]=U.z),c.tangent&&(O[N++]=W.x,O[N++]=W.y,O[N++]=W.z,O[N++]=W.x,O[N++]=W.y,O[N++]=W.z),c.bitangent&&(z[M++]=q.x,z[M++]=q.y,z[M++]=q.z,z[M++]=q.x,z[M++]=q.y,z[M++]=q.z)}}var ie=new s.GeometryAttributes;c.position&&(ie.position=new o.GeometryAttribute({componentDatatype:n.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:H})),c.normal&&(ie.normal=new o.GeometryAttribute({componentDatatype:n.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:V})),c.tangent&&(ie.tangent=new o.GeometryAttribute({componentDatatype:n.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:O})),c.bitangent&&(ie.bitangent=new o.GeometryAttribute({componentDatatype:n.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:z})),c.st&&(ie.st=new o.GeometryAttribute({componentDatatype:n.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:R}));var ne=T/3;T-=6*(A+1);var re=m.IndexDatatype.createTypedArray(ne,T),oe=0;for(v=0;v<ne-2;v+=2){var se=v,me=v+2,le=i.Cartesian3.fromArray(H,3*se,_),ue=i.Cartesian3.fromArray(H,3*me,E);if(!i.Cartesian3.equalsEpsilon(le,ue,l.CesiumMath.EPSILON10)){var pe=v+1,de=v+3;re[oe++]=pe,re[oe++]=se,re[oe++]=de,re[oe++]=de,re[oe++]=se,re[oe++]=me}}var ce=new o.Geometry({attributes:ie,indices:re,primitiveType:a.PrimitiveType.TRIANGLES,boundingSphere:new a.BoundingSphere.fromVertices(H)});return e.defined(t._enuCenter)&&(ce.attributes.position.values.set(g.localPos.topPositions,0),ce.attributes.position.values.set(g.localPos.bottomPositions,ce.attributes.position.values.length/2),ce.attributes.position.componentDatatype=n.ComponentDatatype.FLOAT),ce}},function(a,i){return e.defined(i)&&(a=G.unpack(a,i)),a._ellipsoid=t.Ellipsoid.clone(a._ellipsoid),G.createGeometry(a)}}));
